##################################################
#                                                #
# Part 3: K3d + Argo CD                          #
#   - make destroy                               #
#   - make up                                    #
#                                                #
##################################################

## Config
SERVER_NODE_NAME = "tnardS"
SERVER_NODE_IP = "192.168.56.120" # 110

MEM = "2048"
CPUS = "4" # (For 42 computers use only 1)

BOX = "debian/bookworm64"
##

Vagrant.configure("2") do |config|
  config.vm.box = BOX
	config.vm.box_check_update = false
  config.ssh.forward_agent = true

  config.vm.define SERVER_NODE_NAME do |server|
    server.vbguest.auto_update = false
    server.vm.hostname = SERVER_NODE_NAME
    server.vm.network "private_network", ip: SERVER_NODE_IP
    server.vm.provider "virtualbox" do |vb|
      vb.memory = MEM
      vb.cpus = CPUS
    end
    server.vm.synced_folder ".", "/vagrant", type: "virtualbox" # Sync folder with host

    server.vm.provision "shell", inline: <<-SHELL
      # Install docker
      sudo apt update -q
      sudo apt install curl -y -q
      curl -fsSL https://get.docker.com | sh -
      sudo systemctl enable --now docker.service
      sudo systemctl enable --now containerd.service
      sudo systemctl start docker

      # Install K3d
      curl -s https://raw.githubusercontent.com/rancher/k3d/main/install.sh | sudo bash
      sudo /usr/local/bin/k3d cluster create dev-cluster --port 8888:8888@loadbalancer
      
      # Install kubectl
      curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      chmod +x kubectl
      sudo mv ./kubectl /usr/local/bin
      
      # Create namespaces
      sudo /usr/local/bin/kubectl create namespace argocd
      sudo /usr/local/bin/kubectl create namespace dev

      # Install Argo CD
      sudo /usr/local/bin/kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

      ## Wait for Argo CD to be ready
      sudo /usr/local/bin/kubectl rollout status deployment argocd-server -n argocd
      sudo /usr/local/bin/kubectl rollout status deployment argocd-redis -n argocd
      sudo /usr/local/bin/kubectl rollout status deployment argocd-repo-server -n argocd
      sudo /usr/local/bin/kubectl rollout status deployment argocd-dex-server -n argocd 
      ##

      sudo /usr/local/bin/kubectl apply -n argocd -f /vagrant/confs/wil.yaml
      sudo /usr/local/bin/kubectl wait --for=condition=Ready pods --all -n argocd
      sudo /usr/local/bin/kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d > /vagrant/pass

      sudo /usr/local/bin/kubectl port-forward svc/argocd-server -n argocd 1053:443 --address='0.0.0.0'
    SHELL
  end

end
