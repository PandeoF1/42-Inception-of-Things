##################################################
#                                                #
# Part bonus: Argo CD + Gitlab                   #
#   - make destroy                               #
#   - make up                                    #
#                                                #
##################################################

## Config
SERVER_NODE_NAME = "tnardS"
SERVER_NODE_IP = "192.168.56.110"

MEM = "12000"
CPUS = "6" # (For 42 computers use only 1)

BOX = "bento/debian-12"
##

Vagrant.configure("2") do |config|
  config.vm.box = BOX
	config.vm.box_check_update = false
  config.ssh.forward_agent = true

  config.vm.define SERVER_NODE_NAME do |server|
    server.vbguest.auto_update = false
    server.vm.hostname = SERVER_NODE_NAME
    server.vm.network "private_network", ip: SERVER_NODE_IP
    server.vm.provider "virtualbox" do |vb|
      vb.memory = MEM
      vb.cpus = CPUS
      vb.name = SERVER_NODE_NAME
    end
    server.vm.synced_folder ".", "/vagrant", type: "virtualbox" # Sync folder with host

    server.vm.provision "shell", inline: <<-SHELL
      # Install docker
      sudo apt update -q
      sudo apt install curl -y -q
      curl -fsSL https://get.docker.com | sh -
      sudo systemctl enable --now docker.service
      sudo systemctl enable --now containerd.service
      sudo systemctl start docker
  
      # Install HELM
      sudo curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      # Install K3d
      curl -s https://raw.githubusercontent.com/rancher/k3d/main/install.sh | sudo bash
      sudo k3d cluster create dev-cluster --port 8888:8888@loadbalancer --port 8080:80@loadbalancer --port 8181:8181@loadbalancer --agents 2
      
      # Install kubectl
      curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      chmod +x kubectl
      sudo mv ./kubectl /usr/local/bin
      
      # Create namespaces
      sudo kubectl create namespace argocd
      sudo kubectl create namespace dev
      sudo kubectl create namespace gitlab

      sudo helm repo add gitlab https://charts.gitlab.io/
      sudo helm search repo gitlab
      sudo helm install gitlab gitlab/gitlab   --set global.hosts.https="false" --set global.ingress.configureCertmanager="false" --set gitlab-runner.install="false" -n gitlab
      sudo kubectl wait -n gitlab --for=condition=available deployment --all --timeout=-1s

      # Install Argo CD
      sudo kubectl apply -n argocd -f /vagrant/confs/install.yaml

      ## Wait for Argo CD to be ready
      sudo kubectl wait -n argocd --for=condition=Ready pods --all --timeout=600s
      ##

      sudo kubectl apply -f /vagrant/confs/ingress.yaml -n argocd
      sudo kubectl apply -f /vagrant/confs/ingress.yaml -n gitlab

      #sudo kubectl apply -n argocd -f /vagrant/confs/wil.yaml
      sudo kubectl wait --for=condition=Ready pods --all -n argocd
      sudo kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d > /vagrant/pass.argocd
      sudo kubectl get secret -n gitlab gitlab-gitlab-initial-root-password -o jsonpath='{.data.password}' | base64 -d > /vagrant/pass.gitlab
    SHELL
  end

end
